name: Update Apple Rules

on:
  schedule:
    # 每天北京时间上午9点 (UTC+8) => UTC时间是凌晨1点
    - cron: '0 1 * * *'
  workflow_dispatch:  # 允许手动触发

jobs:
  update:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        ref: release  # 检出 release 分支
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'
        
    - name: Install requests
      run: pip install requests
        
    - name: Download and process rules
      run: |
        cat << 'EOF' > process.py
        import requests

        def process_file(url):
            response = requests.get(url)
            if response.status_code == 200:
                lines = response.text.splitlines()
                # 过滤掉注释行和特定字符串
                filtered_lines = [line for line in lines 
                                if not line.startswith("#") 
                                and "this_ruleset_is_made_by_sukkaw.ruleset.skk.moe" not in line
                                and line.strip()]  # 确保行不是空的
                return filtered_lines
            else:
                raise Exception(f"Failed to download {url}")

        try:
            # 处理 apple_cn.conf
            cn_url = "https://ruleset.skk.moe/List/non_ip/apple_cn.conf"
            cdn_url = "https://ruleset.skk.moe/List/non_ip/apple_cdn.conf"
            services_url = "https://ruleset.skk.moe/List/non_ip/apple_services.conf"

            # 合并 apple_cn 和 apple_cdn
            cn_rules = process_file(cn_url)
            cdn_rules = process_file(cdn_url)
            combined_rules = list(set(cn_rules + cdn_rules))  # 使用set去重
            
            # 确保规则按字母顺序排序
            combined_rules.sort()
            
            with open("apple_cn.conf", "w") as f:
                f.write("\n".join(combined_rules))

            # 处理 apple_services
            services_rules = process_file(services_url)
            services_rules.sort()  # 同样按字母顺序排序
            
            with open("apple_services.conf", "w") as f:
                f.write("\n".join(services_rules))
                
            print("Rules processing completed successfully!")
            
        except Exception as e:
            print(f"Error occurred: {str(e)}")
            exit(1)
        EOF
        
        python process.py
        
    - name: Config Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
    - name: Commit and Push
      run: |
        # 获取北京时间
        current_time=$(TZ=Asia/Shanghai date '+%Y-%m-%d %H:%M:%S')
        
        git add apple_cn.conf apple_services.conf
        git commit -m "Update rules: ${current_time}"
        git push origin release
